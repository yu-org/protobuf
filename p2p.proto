syntax = "proto3";

option go_package = "./goproto";
import "base_types.proto";
import "google/protobuf/empty.proto";

service P2pNetwork {
    // kernel(rpc server)
    // tripods --call-->  kernel
    rpc RequestPeer(StreamRequest) returns (StreamResponse);
    // kernel(rpc client)
    // kernel --call--> tripods
    rpc HandleRequest(Bytes) returns (StreamResponse);

    rpc AddTopic(String) returns (google.protobuf.Empty);
    rpc PubP2P(PubRequest) returns (Err);
    rpc SubP2P(SubRequest) returns (SubResponse);
}

message StreamRequest {
    uint32 typ = 1;
    string peer_id = 2;
    bytes msg = 3;
}

message StreamHandleRequest {
    uint32 typ = 1;
    bytes msg = 2;
}

message StreamResponse {
    bytes msg = 1;
    string err = 2;
}

message PubRequest {
    string topic = 1;
    bytes msg = 2;
}

message SubRequest {
    string topic = 1;
}

message SubResponse {
    bytes msg = 1;
    string err = 2;
}